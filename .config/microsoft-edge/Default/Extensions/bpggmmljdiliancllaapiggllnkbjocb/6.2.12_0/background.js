import{S as s,H as o,C as k,A as i,G as d,D as l}from"./assets/api-BQCVksxv.js";const g=chrome||browser,w={onClick:m};function m(){C().then()}async function C(){if(!(await s.get("settings")).hotkeysTranslate)return;const[n]=await g.tabs.query({active:!0,currentWindow:!0});g.tabs.sendMessage(n.id,{})}const f=chrome||browser,b={create:y,onClick:p};function p(t,n){f.tabs.sendMessage(n.id,t)}function y(){f.contextMenus.create({id:"ddict:translate",title:"Ddict: Translate",contexts:["selection"]})}const L=chrome||browser,h={create:T,onClick:x};function x(){o.openTab(k.URL_UPDATE)}async function T(){L.notifications.create({title:"Ddict New Update",message:"Check what's new",type:"basic",iconUrl:o.getURL("/logo/icon128.png")})}const S={on:U};function U(t,n,e){switch(t.channel){case"aiTranslate":i.callAITranslate(t.data).then(a=>{e(a)});break;case"aiExplain":i.callAIExplain(t.data).then(a=>{e(a)});break;case"translate":v(t.data).then(a=>{e(a)});break;case"tts":M(t.data.text,t.data.src).then(a=>{e(a)});break;case"openSettings":o.openTab(o.getURL("options.html"));break;case"saveWord":i.callSaveWord(t.data).then(a=>{e(a)});break;case"unSaveWord":i.callUnSaveWord(t.data).then(a=>{e(a)});break;case"checkWordSaved":i.callIsWordSaved(t.data).then(a=>{e(a)});break;case"toggleTranslate":default:e(null)}return!0}async function v(t){var a,u;const n=await s.get("lang"),e=await s.get("settings")||l.settings;try{const r=await d.translate(n,t,((a=e.translate_opts)==null?void 0:a.src)||e.src||l.settings.translate_opts.src,((u=e.translate_opts)==null?void 0:u.target)||e.target||l.settings.translate_opts.target);return await s.set("last_word",r),r}catch(r){return console.error(r),null}}async function M(t,n){try{const e=await d.ttsBlob(null,t,n);return await o.blobToBase64(e)}catch{return null}}const c=chrome||browser;c.runtime.onMessage.addListener(S.on);c.notifications.onClicked.addListener(h.onClick);c.contextMenus.onClicked.addListener(b.onClick);c.commands.onCommand.addListener(w.onClick);c.runtime.onInstalled.addListener(t=>{b.create(),t.reason==="update"&&W(),s.get(null).then(n=>{(!n||!n.lang||!n.settings||n.settings.hotkeysTranslate===void 0)&&o.openTab(o.getURL("/options.html"))})});c.runtime.onStartup.addListener(()=>{$().then()});async function W(){const t=await s.get("settings");if(t!=null&&t.updateNotification||(t==null?void 0:t.updateNotification)===void 0){h.create();return}}async function $(){const t=await s.get("lang"),n=await d.getLanguages(t);await s.set("languages",n)}
